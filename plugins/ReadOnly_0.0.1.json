

{"created":"20230415204238565","text":"{\"tiddlers\": {\n\"$:/plugins/Telumire/ReadOnly/icon\": {\n    \"created\": \"20230416140219191\",\n    \"text\": \"{{$:/core/images/preview-open}}\",\n    \"title\": \"$:/plugins/Telumire/ReadOnly/icon\",\n    \"type\": \"text/vnd.tiddlywiki\",\n    \"tags\": \"\",\n    \"modified\": \"20230416140244164\"\n},\n\n\"$:/plugins/Telumire/ReadOnly/plugin.info\": {\n    \"created\": \"20230415204504108\",\n    \"title\": \"$:/plugins/Telumire/ReadOnly/plugin.info\",\n    \"type\": \"application/json\",\n    \"text\": \"{\\n    \\\"title\\\": \\\"$:/plugins/Telumire/ReadOnly\\\",\\n    \\\"name\\\": \\\"ReadOnly\\\",\\n    \\\"description\\\": \\\"Hide buttons with a filter\\\",\\n    \\\"author\\\": \\\"Telumire\\\",\\n    \\\"version\\\": \\\"0.0.1\\\",\\n    \\\"core-version\\\": \\\"5.2.8-prerelease\\\",\\n    \\\"source\\\": \\\"\\\",\\n    \\\"list\\\": \\\"readme history\\\",\\n    \\\"parent-plugin\\\": \\\"\\\",\\n    \\\"dependents\\\": \\\"\\\",\\n    \\\"plugin-type\\\": \\\"plugin\\\",\\n    \\\"packaged-by\\\": \\\"Gatha on 17th April 2023, 00:49:54\\\"\\n}\",\n    \"modified\": \"20230416224954278\"\n},\n\n\"$:/plugins/Telumire/ReadOnly/settings\": {\n    \"created\": \"20220505193946834\",\n    \"text\": \"\\\\define enable-autosave()\\n\u003C$action-setfield $tiddler=\\\"$:/config/AutoSave\\\" text=\\\"yes\\\"/>\\n\\\\end\\n\\\\define disable-autosave()\\n\u003C$action-setfield $tiddler=\\\"$:/config/AutoSave\\\" text=\\\"\\\"/>\\n\\\\end\\n\\\\define set-current-sidebar-tab()\\n\u003C$action-listops  $tiddler=\\\"$:/state/tab/sidebar--595412856\\\" $field=\\\"text\\\" $filter=\\\"[[$:/tags/SideBar]tagging[]first[]]\\\"/>\\n\\\\end\\n\\\\define StartupAction()\\n    \u003C$let read-only={{{ [subfilter{!!ReadOnlyFilter}] }}}>\\n        \u003C!-- ReadOnly Style -->\\n            \u003C$list filter=\\\"[\u003Cread-only>match[true]]\\\" variable=_>\\n                \u003Cstyle>{{!!ReadOnlyCSS}}\u003C/style>\\n            \u003C/$list>\\n        \u003C!-- Actions -->\\n        \u003C!-- Toggle save warning-->\\n        \u003C$list filter=\\\"[\u003Cread-only>match[true]]\\\" variable=\\\"_\\\" emptyMessage=\u003C\u003Cenable-autosave>> >\u003C\u003Cdisable-autosave>>\u003C/$list>\\n\\n        \u003C$list filter=\\\"[list[!!config-visibility]]\\\" variable=\\\"UI-elements\\\">\\n            \u003C$list filter=\\\"[\u003CcurrentTiddler>get\u003CUI-elements>enlist-input[]has[text]]\\\" variable=\\\"UI-element\\\">\\n                \u003C!-- config visibility -->\\n                \u003C$list filter=\\\"[\u003CUI-elements>search:title[Buttons]]\\\" variable=_>\\n                    \u003C$tiddler tiddler={{{ $:/config/[\u003CUI-elements>]/Visibility/[\u003CUI-element>]+[join[]] }}}>\\n                         \u003C$list filter=\\\"[\u003Cread-only>match[true]]\\\" variable=_>\\n                             \u003C!-- store initial visibility value -->\\n                             \u003C$action-setfield initial={{!!text}}/>\\n                             \u003C!-- change visibility value to hide -->\\n                             \u003C$action-setfield text=\\\"hide\\\"/>\\n                         \u003C/$list>\\n                         \u003C$list filter=\\\"[is[current]has[initial]]:filter[\u003Cread-only>match[false]]\\\" variable=_>\\n                             \u003C!-- restore initial visibility value -->\\n                             \u003C$action-setfield text={{!!initial}} />\\n                         \u003C/$list>\\n                    \u003C/$tiddler>\\n                \u003C/$list>\\n                \u003C!-- toggle tags -->\\n                \u003C$list filter=\\\"[\u003CUI-elements>search:title[tabs]]:filter[\u003Cread-only>match[true]]\\\" variable=\\\"_\\\" >\\n                    \u003C$action-listops  $tiddler=\u003C\u003CUI-element>> $tags=\\\"-[[$:/tags/SideBar]] +[[$:/tags/SideBar/disabled]]\\\" />\\n                \u003C/$list>\\n                \u003C$list filter=\\\"[\u003CUI-elements>search:title[tabs]]:filter[\u003Cread-only>match[false]]\\\" variable=\\\"_\\\" >\\n                    \u003C$action-listops  $tiddler=\u003C\u003CUI-element>> $tags=\\\"+[[$:/tags/SideBar]] -[[$:/tags/SideBar/disabled]]\\\" />\\n                \u003C/$list>\\n            \u003C/$list>\\n        \u003C/$list>\\n        \u003C!-- Set current tab -->\\n        \u003C\u003Cset-current-sidebar-tab>>\\n    \u003C/$let>\\n\\\\end\\n\\\\define checkbox(state,field)\\n    \u003C$button class=\\\"tc-btn-invisible\\\" actions=\\\"\\\"\\\"\\n        \u003C$action-listops  $field=\\\"$field$\\\" $subfilter=\\\"+[toggle\u003Ctoggle>]\\\" />\\n        \u003C$list filter=\\\"[[$state$]!match[checked]]\\\" variable=\\\"_\\\">\\n            \u003C$action-deletetiddler $filter=\\\"[\u003Ctoggle>][search:title[$:/config/]search:title\u003Ctoggle>]\\\"/>\\n        \u003C/$list>\\n        \u003C\u003Cset-current-sidebar-tab>>\\n        \\\"\\\"\\\">\\n    \u003Cinput type=checkbox $state$/>\\n    \u003C/$button>\\n\\\\end\\n\\\\define toggle-visibility(filter,field)\\n\u003C$list filter=\\\"$filter$\\\" variable=\\\"toggle\\\">\\n    \u003Cdiv>\\n        \u003Clabel class=\\\"tc-icon-wrapper\\\">\\n        \u003C$macrocall $name=\\\"checkbox\\\" field=\\\"$field$\\\" state={{{ [is[current]list[!!$field$]match\u003Ctoggle>then[]else[checked]] }}}/>\\n            \u003C$tiddler tiddler=\u003C\u003Ctoggle>> >\\n                \u003C$transclude tiddler={{!!icon}}/> \u003C\u003Ctoc-caption>>\\n                -- \u003Ci class=\\\"tc-muted\\\">\\n                    \u003C$link>\u003C$transclude field=\\\"description\\\">\u003C$transclude field=\\\"title\\\"/>\u003C/$transclude>\u003C/$link>\\n                \u003C/i>\\n            \u003C/$tiddler>\\n        \u003C/label>\\n    \u003C/div>\\n\u003C/$list>\\n\\\\end\\n\\\\define check-all()\\n    \u003C\u003Cenable-autosave>>\\n    \u003C$action-setmultiplefields $fields=\\\"[list[!!config-visibility]]\\\" $values=\\\" \\\"/>\\n    \u003C$action-deletetiddler $filter=\\\"\\\"\\\"\\n        $:/tags/ViewToolbar $:/tags/PageControls $:/tags/SideBar $:/tags/SideBar/disabled +[tagging[]]\\n        [search:title[$:/config/ViewToolbarButtons]]\\n        [search:title[$:/config/PageControlButtons]]\\n    \\\"\\\"\\\"/>\\n\\\\end\\n\\\\define uncheck-all()\\n    \u003C\u003Cenable-autosave>>\\n    \u003C$action-setmultiplefields $fields=\\\"[list[!!config-visibility]]\\\" $values=\\\"\\\"\\\"\\n    [[$:/tags/PageControls]tagging[]format:titlelist[]join[ ]]\\n    [[$:/tags/ViewToolbar]tagging[]format:titlelist[]join[ ]]\\n    [subfilter[$:/tags/SideBar $:/tags/SideBar/disabled]tagging[]format:titlelist[]join[ ]]\\n    \\\"\\\"\\\"/>\\n\\\\end\\n\\\\define save-changes()\\n    \u003C\u003CStartupAction>>\\n    \u003C$wikify name=\\\"site-title\\\" text={{$:/config/SaveWikiButton/Filename}}>\\n        \u003C$action-sendmessage $message=\\\"tm-save-wiki\\\" $param={{$:/config/SaveWikiButton/Template}} filename=\u003C\u003Csite-title>>/>\\n    \u003C/$wikify>\\n\\\\end\\n\\\\define tabList() [[View toolbar]] [[Page controls]] [[Sidebar tabs]] [[Custom CSS]] [[Settings]]\\n\\\\define tabViewToolbar()\\n    \u003Cp>\\n        Select which buttons can be displayed in read only mode.\\n    \u003C/p>\\n    \u003C$macrocall $name=\\\"toggle-visibility\\\" filter=\\\"[[$:/tags/ViewToolbar]tagging[]]\\\" field=\\\"ViewToolbarButtons\\\"/>\\n\\\\end\\n\\\\define tabPageControls()\\n    \u003Cp>\\n        Select which buttons can be displayed in read only mode.\\n    \u003C/p>\\n    \u003C$macrocall $name=\\\"toggle-visibility\\\" filter=\\\"[[$:/tags/PageControls]tagging[]]\\\" field=\\\"PageControlButtons\\\"/>\\n\\\\end\\n\\\\define tabSidebarTabs()\\n    \u003Cp>\\n        Select which tabs can be displayed in read only mode.\\n    \u003C/p>\\n    \u003C$macrocall $name=\\\"toggle-visibility\\\" filter=\\\"$:/tags/SideBar $:/tags/SideBar/disabled +[tagging[]sort[]]\\\" field=\\\"SideBarSegments/tabs\\\"/>\\n\\\\end\\n\\\\define tabCustomCSS()\\n    \u003Cp>\\n        Write custom CSS rules to enable in read only mode.\\n    \u003C/p>\\n    \u003C$edit-text field=\\\"ReadOnlyCSS\\\" tag=\\\"textarea\\\" class=\\\"tc-edit-texteditor full-width\\\"/>\\n\\\\end\\n\\\\define tabSettings()\\n    \u003Cp>\\n        \u003C$button actions=\u003C\u003Cuncheck-all>> >Hide all\u003C/$button>\\n        \u003C$button actions=\u003C\u003Ccheck-all>> >Reset\u003C/$button>\\n        \u003C$button\\n            actions=\u003C\u003Csave-changes>>\\n            tooltip={{$:/language/Buttons/SaveWiki/Hint}}\\n            aria-label={{$:/language/Buttons/SaveWiki/Caption}}\\n            class=\\\"tc-btn-invisible\\\">\\n            \u003Cspan class=\\\"tc-dirty-indicator \\\">\\n                {{$:/core/images/save-button}} \u003C$text text={{$:/language/Buttons/SaveWiki/Caption}}/>\\n            \u003C/span>\\n        \u003C/$button>\\n    \u003C/p>\\n    \u003Cp>Below is the filter used to trigger the read only.\u003C/p>\\n    \u003C$edit-text field=\\\"ReadOnlyFilter\\\" tag=\\\"textarea\\\" class=\\\"tc-edit-texteditor full-width\\\"/>\\n    \u003Cp>\\n        \u003C$radio field=\\\"override\\\" value=\\\"true\\\"> on\u003C/$radio>\\n        \u003C$radio field=\\\"override\\\" value=\\\"false\\\"> off\u003C/$radio>\\n        \u003C$radio field=\\\"override\\\" value=\\\"\\\"> auto\u003C/$radio>\\n    \u003C/p>\\n    \u003Cp>Read only is \u003C$text text={{{ [subfilter{!!ReadOnlyFilter}match[true]then[on]else[off]] }}}/>.\u003C/p>\\n\\\\end\\n\u003C$tiddler tiddler=\\\"$:/plugins/Telumire/ReadOnly/settings\\\">\\n\u003C!-- ACTIONS -->\\n    \u003C\u003CStartupAction>>\\n\u003C!-- END OF ACTIONS -->\\n\u003C!-- UI -->\\n\u003C$let stateTab=\u003C\u003Cqualify $:/state/tab>> >\\n    \u003Cdiv class=\\\"tc-tab-set tc-vertical\\\">\\n        \u003Cdiv class=\\\"tc-tab-buttons tc-vertical\\\">\\n            \u003C$list filter=\u003C\u003CtabList>> variable=\\\"currentTab\\\">\\n                \u003C$button set=\u003C\u003CstateTab>> setTo=\u003C\u003CcurrentTab>> selectedClass=\\\"tc-tab-selected\\\">\u003C\u003CcurrentTab>>\u003C/$button>\\n            \u003C/$list>\\n        \u003C/div>\\n        \u003Cdiv class=\\\"tc-tab-content tc-vertical\\\">\\n                \u003C$let defaultTab={{{ [enlist\u003CtabList>first[]] }}} >\\n                    \u003C$macrocall $name={{{ tab[\u003CstateTab>get[text]else\u003CdefaultTab>titlecase[]]+[split[ ]join[]] }}}/>\\n                \u003C/$let>\\n        \u003C/div>\\n    \u003C/div>\\n\u003C/$let>\\n\u003C!-- UI Style -->\\n    \u003Cstyle>\\n        textarea.tc-edit-texteditor.full-width{width:100%!important;}\\n        label.tc-icon-wrapper button.tc-btn-invisible{cursor: auto;}\\n    \u003C/style>\\n\u003C!-- END OF UI -->\\n\u003Cblockquote>\\nWARNING: The buttons are not properly turned on when turning off read only. For now, use the \u003C$button actions=\u003C\u003Ccheck-all>>>Reset\u003C/$button> button.\\n\u003C/blockquote>\\n\u003C/$tiddler>\",\n    \"creator\": \"Telumire\",\n    \"title\": \"$:/plugins/Telumire/ReadOnly/settings\",\n    \"modified\": \"20230419061641208\",\n    \"modifier\": \"Telumire\",\n    \"tags\": \"$:/tags/StartupAction $:/tags/ControlPanel/Appearance\",\n    \"type\": \"text/vnd.tiddlywiki\",\n    \"PageControlButtons\": \"$:/core/ui/Buttons/save-wiki $:/core/ui/Buttons/advanced-search $:/core/ui/Buttons/close-all $:/core/ui/Buttons/control-panel $:/core/ui/Buttons/encryption $:/core/ui/Buttons/export-page $:/core/ui/Buttons/fold-all $:/core/ui/Buttons/import $:/core/ui/Buttons/language $:/core/ui/Buttons/manager $:/core/ui/Buttons/more-page-actions $:/core/ui/Buttons/new-image $:/core/ui/Buttons/new-journal $:/core/ui/Buttons/new-tiddler $:/core/ui/Buttons/palette $:/core/ui/Buttons/print $:/core/ui/Buttons/refresh $:/core/ui/Buttons/storyview $:/core/ui/Buttons/tag-manager $:/core/ui/Buttons/theme $:/core/ui/Buttons/timestamp $:/core/ui/Buttons/unfold-all $:/core/ui/Buttons/permaview $:/core/ui/Buttons/full-screen $:/plugins/kookma/commander/buttons/pagecontrol\",\n    \"SideBarSegments/tabs\": \"$:/core/ui/SideBar/Recent $:/core/ui/SideBar/Tools $:/core/ui/SideBar/More $:/plugins/Telumire/RSS/post $:/plugins/kookma/gatha/ui/sidebar\",\n    \"ViewToolbarButtons\": \"$:/core/ui/Buttons/more-tiddler-actions $:/core/ui/Buttons/info $:/core/ui/Buttons/new-here $:/core/ui/Buttons/new-journal-here $:/core/ui/Buttons/clone $:/core/ui/Buttons/export-tiddler $:/core/ui/Buttons/edit $:/core/ui/Buttons/delete $:/core/ui/Buttons/permalink $:/core/ui/Buttons/permaview $:/core/ui/Buttons/open-window $:/core/ui/Buttons/close-others $:/core/ui/Buttons/fold-others $:/core/ui/Buttons/fold $:/core/ui/Buttons/fold-bar\",\n    \"config-visibility\": \"PageControlButtons ViewToolbarButtons SideBarSegments/tabs\",\n    \"ReadOnlyCSS\": \".tc-sidebar-search [aria-label=\\\"{{$:/language/Buttons/AdvancedSearch/Caption}}\\\"]{    \\ndisplay:none;\\n}\",\n    \"caption\": \"Read Only\",\n    \"revision\": \"0\",\n    \"bag\": \"default\",\n    \"ReadOnlyFilter\": \"[[TiddlyWiki Safe Mode]is[tiddler]]\\n[{$:/status/IsLoggedIn}match[yes]]\\n[{$:/info/url/protocol}match[file:]]\\n[{$:/info/url/hostname}match[localhost]]\\n+[!is[blank]limit[1]then[false]else[true]]\\n:map[\u003C..currentTiddler>get[override]!is[blank]else\u003CcurrentTiddler>]\",\n    \"override\": \"\"\n}}\n}","title":"$:/plugins/Telumire/ReadOnly","type":"application/json","tags":"","modified":"20230416035221830","version":"0.0.1","name":"ReadOnly","description":"Hide buttons with a filter","author":"Telumire","list":"readme history","plugin-type":"plugin","packaged-by":"Gatha on 19th April 2023, 14:56:32"}

